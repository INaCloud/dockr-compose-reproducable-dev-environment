language: generic
services: docker
os: linux
dist: xenial

stages:
  - python
  - docker

script:
  - cd $TRAVIS_BUILD_DIR/docker
  - make ${TARGET_IMAGE}

after_success:
  - if ! [[ "$TRAVIS_REPO_SLUG" = "diegoferigo/devenv" && "$TRAVIS_BRANCH" = "master" && "$TRAVIS_PULL_REQUEST" = "false" ]] ; then travis_terminate 0 ; fi
  - docker login --username=$DOCKERHUB_USERNAME --password=$DOCKERHUB_PASSWORD
  - make push_${TARGET_IMAGE}
  - if [ "$IS_LATEST" = "true" ] ; then make push_latest ; fi

jobs:
  include:
    # Disable test stage
    - stage: test
      if: env(DUMMYVAR) is present
    # python stage
    - &stage_python
      stage: python
      language: python
      before_install: pip install Pygments
      install: pip install .
      python: "3.5"
      script:
        - cd $TRAVIS_BUILD_DIR/.ci
        - devenv -G -f devenv.yml -o output.yml
      after_success: pygmentize -g $TRAVIS_BUILD_DIR/.ci/output.yml
    - <<: *stage_python
      python: "3.6"
    - <<: *stage_python
      python: "3.7"
    # docker stage
    - &devenv_template
      stage: docker
      env:
        - TARGET_IMAGE="intel"
        - IS_LATEST=true
        - PUSH_TO_DOCKERHUB=true
    - <<: *devenv_template
      env:
        - TARGET_IMAGE="nvidia"
        - IS_LATEST=false
        - PUSH_TO_DOCKERHUB=true
